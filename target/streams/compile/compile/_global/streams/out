[0m[[0m[31merror[0m] [0m[0m/home/caeus/work/caeus/elodin/src/main/scala/com/github/caeus/elodin/frontend/Lexer.scala:74:20: type mismatch;[0m
[0m[[0m[31merror[0m] [0m[0m found   : Int[0m
[0m[[0m[31merror[0m] [0m[0m required: Vector[com.github.caeus.elodin.frontend.ElodinToken][0m
[0m[[0m[31merror[0m] [0m[0m      Task.succeed(result)[0m
[0m[[0m[31merror[0m] [0m[0m                   ^[0m
[0m[[0m[31merror[0m] [0m[0m/home/caeus/work/caeus/elodin/src/main/scala/com/github/caeus/elodin/frontend/Lexer.scala:75:82: missing argument list for method report in class Failed[0m
[0m[[0m[31merror[0m] [0m[0mUnapplied methods are only converted to functions when a function type is expected.[0m
[0m[[0m[31merror[0m] [0m[0mYou can make this conversion explicit by writing `report _` or `report(_)(_)` instead of `report`.[0m
[0m[[0m[31merror[0m] [0m[0m    case f @ Failed(errors)   => Task.fail(new Exception(s"Lexing error at : ${f.report}"))[0m
[0m[[0m[31merror[0m] [0m[0m                                                                                 ^[0m
[0m[[0m[31merror[0m] [0m[0mtwo errors found[0m
